From 529c7e3355656a60e2a4cdfe88828dd95b7e29b9 Mon Sep 17 00:00:00 2001
From: MinerSebas <scherthan_sebastian@web.de>
Date: Sun, 2 Jun 2024 18:37:00 +0200
Subject: [PATCH 1/2] tuxedo-drivers: 3.2.14 -> 4.5.0

---
 nixos/modules/hardware/tuxedo-keyboard.nix    |  4 +-
 .../linux/tuxedo-drivers/default.nix          | 55 +++++++++++++++++++
 .../linux/tuxedo-keyboard/default.nix         | 47 ----------------
 pkgs/top-level/linux-kernels.nix              |  3 +-
 4 files changed, 59 insertions(+), 50 deletions(-)
 create mode 100644 pkgs/os-specific/linux/tuxedo-drivers/default.nix
 delete mode 100644 pkgs/os-specific/linux/tuxedo-keyboard/default.nix

diff --git a/nixos/modules/hardware/tuxedo-keyboard.nix b/nixos/modules/hardware/tuxedo-keyboard.nix
index f90dfc6e3134ba..76dd645fbf5be9 100644
--- a/nixos/modules/hardware/tuxedo-keyboard.nix
+++ b/nixos/modules/hardware/tuxedo-keyboard.nix
@@ -4,7 +4,7 @@ with lib;
 
 let
   cfg = config.hardware.tuxedo-keyboard;
-  tuxedo-keyboard = config.boot.kernelPackages.tuxedo-keyboard;
+  tuxedo-drivers = config.boot.kernelPackages.tuxedo-drivers;
 in
   {
     options.hardware.tuxedo-keyboard = {
@@ -30,6 +30,6 @@ in
     config = mkIf cfg.enable
     {
       boot.kernelModules = ["tuxedo_keyboard"];
-      boot.extraModulePackages = [ tuxedo-keyboard ];
+      boot.extraModulePackages = [ tuxedo-drivers ];
     };
   }
diff --git a/pkgs/os-specific/linux/tuxedo-drivers/default.nix b/pkgs/os-specific/linux/tuxedo-drivers/default.nix
new file mode 100644
index 00000000000000..32ae0951391220
--- /dev/null
+++ b/pkgs/os-specific/linux/tuxedo-drivers/default.nix
@@ -0,0 +1,55 @@
+{ lib, stdenv, fetchFromGitLab, kernel, linuxHeaders, pahole }:
+
+stdenv.mkDerivation (finalAttrs: {
+  pname = "tuxedo-drivers-${kernel.version}";
+  version = "4.5.0";
+
+  src = fetchFromGitLab {
+    owner = "tuxedocomputers";
+    repo = "development/packages/tuxedo-drivers";
+    rev = "v${finalAttrs.version}";
+    hash = "sha256-WQy/5NB/N8JjOKEw00PisCTH0ITrQDQCXaKPl5P+6Wo=";
+  };
+
+  buildInputs = [
+    pahole
+    linuxHeaders
+  ];
+
+  makeFlags = [ "KDIR=${kernel.dev}/lib/modules/${kernel.modDirVersion}/build" ];
+
+  installPhase = ''
+    runHook preInstall
+
+    mkdir -p "$out/lib/modules/${kernel.modDirVersion}"
+
+    for module in clevo_acpi.ko clevo_wmi.ko \
+                  ite_829x/ite_829x.ko ite_8291/ite_8291.ko ite_8291_lb/ite_8291_lb.ko ite_8297/ite_8297.ko \
+                  tuxedo_compatibility_check/tuxedo_compatibility_check.ko tuxedo_io/tuxedo_io.ko tuxedo_keyboard.ko \
+                  tuxedo_nb02_nvidia_power_ctrl/tuxedo_nb02_nvidia_power_ctrl.ko \
+                  tuxedo_nb04/tuxedo_nb04_kbd_backlight.ko tuxedo_nb04/tuxedo_nb04_keyboard.ko tuxedo_nb04/tuxedo_nb04_power_profiles.ko \
+                  tuxedo_nb04/tuxedo_nb04_sensors.ko tuxedo_nb04/tuxedo_nb04_wmi_ab.ko tuxedo_nb04/tuxedo_nb04_wmi_bs.ko \
+                  tuxedo_nb05/tuxedo_nb05_ec.ko tuxedo_nb05/tuxedo_nb05_fan_control.ko tuxedo_nb05/tuxedo_nb05_kbd_backlight.ko \
+                  tuxedo_nb05/tuxedo_nb05_keyboard.ko tuxedo_nb05/tuxedo_nb05_power_profiles.ko tuxedo_nb05/tuxedo_nb05_sensors.ko \
+                  uniwill_wmi.ko; do
+        install -Dm444 src/$module -t $out/lib/modules/${kernel.modDirVersion}
+    done
+
+    runHook postInstall
+  '';
+
+  meta = {
+    broken = stdenv.isAarch64 || (lib.versionOlder kernel.version "5.5");
+    description = "Keyboard and hardware I/O driver for TUXEDO Computers laptops";
+    homepage = "https://gitlab.com/tuxedocomputers/development/packages/tuxedo-drivers";
+    license = lib.licenses.gpl3Plus;
+    longDescription = ''
+      This driver provides support for Fn keys, brightness/color/mode for most TUXEDO
+      keyboards (except white backlight-only models).
+
+      Can be used with the "hardware.tuxedo-keyboard" NixOS module.
+    '';
+    maintainers = [ lib.maintainers.blanky0230 ];
+    platforms = lib.platforms.linux;
+  };
+})
diff --git a/pkgs/os-specific/linux/tuxedo-keyboard/default.nix b/pkgs/os-specific/linux/tuxedo-keyboard/default.nix
deleted file mode 100644
index 2e0a13846f32db..00000000000000
--- a/pkgs/os-specific/linux/tuxedo-keyboard/default.nix
+++ /dev/null
@@ -1,47 +0,0 @@
-{ lib, stdenv, fetchFromGitHub, kernel, linuxHeaders, pahole }:
-
-stdenv.mkDerivation (finalAttrs: {
-  pname = "tuxedo-keyboard-${kernel.version}";
-  version = "3.2.14";
-
-  src = fetchFromGitHub {
-    owner = "tuxedocomputers";
-    repo = "tuxedo-keyboard";
-    rev = "v${finalAttrs.version}";
-    hash = "sha256-L3NsUUKA/snUcRWwlZidsBiTznhfulNldidEDDmNOkw=";
-  };
-
-  buildInputs = [
-    pahole
-    linuxHeaders
-  ];
-
-  makeFlags = [ "KDIR=${kernel.dev}/lib/modules/${kernel.modDirVersion}/build" ];
-
-  installPhase = ''
-    runHook preInstall
-
-    mkdir -p "$out/lib/modules/${kernel.modDirVersion}"
-
-    for module in clevo_acpi.ko clevo_wmi.ko tuxedo_keyboard.ko tuxedo_io/tuxedo_io.ko uniwill_wmi.ko; do
-        mv src/$module $out/lib/modules/${kernel.modDirVersion}
-    done
-
-    runHook postInstall
-  '';
-
-  meta = {
-    broken = stdenv.isAarch64 || (lib.versionOlder kernel.version "5.5");
-    description = "Keyboard and hardware I/O driver for TUXEDO Computers laptops";
-    homepage = "https://github.com/tuxedocomputers/tuxedo-keyboard/";
-    license = lib.licenses.gpl3Plus;
-    longDescription = ''
-      This driver provides support for Fn keys, brightness/color/mode for most TUXEDO
-      keyboards (except white backlight-only models).
-
-      Can be used with the "hardware.tuxedo-keyboard" NixOS module.
-    '';
-    maintainers = [ lib.maintainers.blanky0230 ];
-    platforms = lib.platforms.linux;
-  };
-})
diff --git a/pkgs/top-level/linux-kernels.nix b/pkgs/top-level/linux-kernels.nix
index bce80c21b32b5c..2eb36c78084a82 100644
--- a/pkgs/top-level/linux-kernels.nix
+++ b/pkgs/top-level/linux-kernels.nix
@@ -480,7 +480,7 @@ in {
 
     rust-out-of-tree-module = if lib.versionAtLeast kernel.version "6.7" then callPackage ../os-specific/linux/rust-out-of-tree-module { } else null;
 
-    tuxedo-keyboard = if lib.versionAtLeast kernel.version "4.14" then callPackage ../os-specific/linux/tuxedo-keyboard { } else null;
+    tuxedo-drivers = if lib.versionAtLeast kernel.version "4.14" then callPackage ../os-specific/linux/tuxedo-drivers { } else null;
 
     jool = callPackage ../os-specific/linux/jool { };
 
@@ -597,6 +597,7 @@ in {
     ati_drivers_x11 = throw "ati drivers are no longer supported by any kernel >=4.1"; # added 2021-05-18;
     hid-nintendo = throw "hid-nintendo was added in mainline kernel version 5.16"; # Added 2023-07-30
     sch_cake = throw "sch_cake was added in mainline kernel version 4.19"; # Added 2023-06-14
+    tuxedo-keyboard = self.tuxedo-drivers; # Added 2024-06-2
     rtl8723bs = throw "rtl8723bs was added in mainline kernel version 4.12"; # Added 2023-06-14
     vm-tools = self.mm-tools;
     xmm7360-pci = throw "Support for the XMM7360 WWAN card was added to the iosm kmod in mainline kernel version 5.18";

From b8ef83fc0c4ac28abb54a800eda03d17a36e4d9b Mon Sep 17 00:00:00 2001
From: MinerSebas <scherthan_sebastian@web.de>
Date: Sun, 2 Jun 2024 18:41:47 +0200
Subject: [PATCH 2/2] nixos/tuxedo-drivers: rename from tuxedo-keyboard

---
 nixos/modules/hardware/tuxedo-drivers.nix     | 23 ++++++++++++
 nixos/modules/hardware/tuxedo-keyboard.nix    | 35 -------------------
 nixos/modules/module-list.nix                 |  2 +-
 nixos/modules/services/hardware/tuxedo-rs.nix |  2 +-
 .../linux/tuxedo-drivers/default.nix          |  2 +-
 5 files changed, 26 insertions(+), 38 deletions(-)
 create mode 100644 nixos/modules/hardware/tuxedo-drivers.nix
 delete mode 100644 nixos/modules/hardware/tuxedo-keyboard.nix

diff --git a/nixos/modules/hardware/tuxedo-drivers.nix b/nixos/modules/hardware/tuxedo-drivers.nix
new file mode 100644
index 00000000000000..a2ab60be72f7cf
--- /dev/null
+++ b/nixos/modules/hardware/tuxedo-drivers.nix
@@ -0,0 +1,23 @@
+{ config, lib, ... }:
+
+with lib;
+
+let
+  cfg = config.hardware.tuxedo-drivers;
+  tuxedo-drivers = config.boot.kernelPackages.tuxedo-drivers;
+in
+  {
+    imports = [
+      (mkRenamedOptionModule ["hardware" "tuxedo-keyboard" ] ["hardware" "tuxedo-drivers" ])
+    ];
+
+    options.hardware.tuxedo-drivers = {
+      enable = mkEnableOption "the drivers for TUXEDO Computers laptops.";
+    };
+
+    config = mkIf cfg.enable
+    {
+      boot.kernelModules = ["tuxedo_keyboard"];
+      boot.extraModulePackages = [ tuxedo-drivers ];
+    };
+  }
diff --git a/nixos/modules/hardware/tuxedo-keyboard.nix b/nixos/modules/hardware/tuxedo-keyboard.nix
deleted file mode 100644
index 76dd645fbf5be9..00000000000000
--- a/nixos/modules/hardware/tuxedo-keyboard.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{ config, lib, pkgs, ... }:
-
-with lib;
-
-let
-  cfg = config.hardware.tuxedo-keyboard;
-  tuxedo-drivers = config.boot.kernelPackages.tuxedo-drivers;
-in
-  {
-    options.hardware.tuxedo-keyboard = {
-      enable = mkEnableOption ''
-          the tuxedo-keyboard driver.
-
-          To configure the driver, pass the options to the {option}`boot.kernelParams` configuration.
-          There are several parameters you can change. It's best to check at the source code description which options are supported.
-          You can find all the supported parameters at: <https://github.com/tuxedocomputers/tuxedo-keyboard#kernelparam>
-
-          In order to use the `custom` lighting with the maximumg brightness and a color of `0xff0a0a` one would put pass {option}`boot.kernelParams` like this:
-
-          ```
-          boot.kernelParams = [
-           "tuxedo_keyboard.mode=0"
-           "tuxedo_keyboard.brightness=255"
-           "tuxedo_keyboard.color_left=0xff0a0a"
-          ];
-          ```
-      '';
-    };
-
-    config = mkIf cfg.enable
-    {
-      boot.kernelModules = ["tuxedo_keyboard"];
-      boot.extraModulePackages = [ tuxedo-drivers ];
-    };
-  }
diff --git a/nixos/modules/module-list.nix b/nixos/modules/module-list.nix
index 159696be8b6d0f..ab23b419c57e8e 100644
--- a/nixos/modules/module-list.nix
+++ b/nixos/modules/module-list.nix
@@ -97,7 +97,7 @@
   ./hardware/sensor/iio.nix
   ./hardware/steam-hardware.nix
   ./hardware/system-76.nix
-  ./hardware/tuxedo-keyboard.nix
+  ./hardware/tuxedo-drivers.nix
   ./hardware/ubertooth.nix
   ./hardware/uinput.nix
   ./hardware/uni-sync.nix
diff --git a/nixos/modules/services/hardware/tuxedo-rs.nix b/nixos/modules/services/hardware/tuxedo-rs.nix
index 506454c1cadff0..25ebfc181dc0d3 100644
--- a/nixos/modules/services/hardware/tuxedo-rs.nix
+++ b/nixos/modules/services/hardware/tuxedo-rs.nix
@@ -17,7 +17,7 @@ in
 
   config = mkIf cfg.enable (mkMerge [
     {
-      hardware.tuxedo-keyboard.enable = true;
+      hardware.tuxedo-drivers.enable = true;
 
       systemd = {
         services.tailord = {
diff --git a/pkgs/os-specific/linux/tuxedo-drivers/default.nix b/pkgs/os-specific/linux/tuxedo-drivers/default.nix
index 32ae0951391220..1bb8d85316e09c 100644
--- a/pkgs/os-specific/linux/tuxedo-drivers/default.nix
+++ b/pkgs/os-specific/linux/tuxedo-drivers/default.nix
@@ -47,7 +47,7 @@ stdenv.mkDerivation (finalAttrs: {
       This driver provides support for Fn keys, brightness/color/mode for most TUXEDO
       keyboards (except white backlight-only models).
 
-      Can be used with the "hardware.tuxedo-keyboard" NixOS module.
+      Can be used with the "hardware.tuxedo-drivers" NixOS module.
     '';
     maintainers = [ lib.maintainers.blanky0230 ];
     platforms = lib.platforms.linux;
